{"version":3,"sources":["components/BaremeSubItem.jsx","components/BaremeSettings.jsx","components/CustomToolTip.jsx","components/SimpleLineChart.jsx","components/ChartSettings.jsx","components/RankingBarChart.jsx","components/ResultsByTeamTable.jsx","js/ranking.js","components/App.jsx","registerServiceWorker.js","index.js"],"names":["BaremeSubItem","_ref","title","setBaremeValue","_ref$path","Object","slicedToArray","path","a","b","bareme","react_default","createElement","className","Button","bsStyle","onClick","_","defaultBareme","vainqueur","exact","faux","score","ecart1","ecart2","diff","BaremeSettings","components_BaremeSubItem","CustomToolTip","props","active","previousRankings","payload","currentPlace","skippedPlaces","scoreOfThePreviousPlayer","Number","MAX_SAFE_INTEGER","additionalData","totals","entries","sort","_ref2","_ref3","avalue","_ref4","reduce","ps","_ref5","_ref6","key","value","computeRankings","previousTotals","fullName","map","pl","rankEvolution","previousRank","name","concat","pointsEvolution","pronosResults","outcome","style","color","rawPronos","SimpleLineChart","chartData","LineChart","width","height","data","margin","top","right","left","bottom","XAxis","dataKey","YAxis","type","domain","CartesianGrid","strokeDasharray","Tooltip","content","components_CustomToolTip","Legend","values","players","p","Line","stroke","getDisplayName","filter","getTeamsFromDirtyGroup","dgrp","startsWith","grp","slice","teams","group","_ref7","join","ChartSettings","state","checkedPhases","filters","checkedRegions","regions","togglePhase","newPhases","_this","setState","setPhases","toggleRegion","newRegions","setRegions","changeFilterType","newFilterType","setFilterType","filterType","this","_this$state","ButtonToolbar","ToggleButtonGroup","defaultValue","onChange","ft","ToggleButton","display","displayName","data-tip","data-multiline","region","reg","indexOf","Component","RankingBarChart","chartDataLast","push","result","BarChart","axisLine","tickLine","dataMax","Math","floor","hide","Bar","label","position","entry","index","Cell","fill","ResultsByTeamTable","resultsByTeam","resultsByTeam2","resultsByTeamsUnsorted","da","db","average","resultsByTeamsSorted","topResultsByTeams","i","length","j","Table","striped","bordered","condensed","hover","colSpan","topResultsByRank","topResultsByRankByPlayer","react","toFixed","buildPronosResultsFromMatches","matches","match","id","shortName","A","B","justifyContent","marginRight","underline","marginLeft","_ref11","_ref12","playerId","prono","buildPronosResultsFromMatch","_ref13","_ref14","matchResult","_teams2","_teams","min","apply","toConsumableArray","defineProperty","pronoDiff","resultDiff","pronoWinner","winner","resultPronoWinner","resultPronoDiff","resultPronoScore","resultPronoA","resultPronoB","abs","buildAggregatedResultFromMatches","results","assign","dataForGraph","matchesForGraph","matchForGraph","forEach","_ref8","_ref9","team","matchCount","_ref10","resultsByTeamForOnePlayer","v","getPhase","stage","App","rankings","dataPhases","dataRegions","rankingsPhases","rankingsRegions","includes","isAdd","newBareme","Navbar","inverse","fixedTop","Header","Brand","components_BaremeSettings","components_RankingBarChart","components_ResultsByTeamTable","components_ChartSettings","components_SimpleLineChart","dist_default","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7c2d3228.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport '../css/BaremeSubItem.css';\n\nconst BaremeSubItem = ({ title, setBaremeValue, path: [a, b], bareme }) => {\n  return (\n    <div className=\"bareme-sub-item\">\n      <span className=\"title\">{title}</span>\n      <Button bsStyle=\"primary\" onClick={(_) => setBaremeValue(a, b, false)}>\n        -\n      </Button>\n      <div className=\"value\">{bareme[a][b]}</div>\n      <Button bsStyle=\"primary\" onClick={(_) => setBaremeValue(a, b, true)}>\n        +\n      </Button>\n    </div>\n  );\n};\n\nBaremeSubItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  setBaremeValue: PropTypes.func.isRequired,\n  path: PropTypes.array.isRequired,\n  bareme: PropTypes.object.isRequired,\n};\n\nexport default BaremeSubItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BaremeSubItem from './BaremeSubItem';\n\nimport '../css/BaremeSettings.css';\n\nexport const defaultBareme = {\n  vainqueur: { exact: 1, faux: 0 },\n  score: { exact: 1, ecart1: 0, ecart2: 0, faux: 0 },\n  diff: { exact: 1, ecart1: 0, faux: 0 },\n};\n\nconst BaremeSettings = ({ bareme, setBaremeValue }) => (\n  <div className=\"bareme-settings\">\n    <h3>Barème : points par match</h3>\n    <div>\n      <div>\n        <h4>Vainqueur</h4>\n        <BaremeSubItem title=\"Pronostic Exact\" setBaremeValue={setBaremeValue} path={['vainqueur', 'exact']} bareme={bareme} />\n        <BaremeSubItem title=\"Pronostic Faux\" setBaremeValue={setBaremeValue} path={['vainqueur', 'faux']} bareme={bareme} />\n      </div>\n      <div>\n        <h4>Nombre de buts par équipe</h4>\n        <BaremeSubItem title=\"Pronostic Exact\" setBaremeValue={setBaremeValue} path={['score', 'exact']} bareme={bareme} />\n        <BaremeSubItem title=\"Ecart de 1\" setBaremeValue={setBaremeValue} path={['score', 'ecart1']} bareme={bareme} />\n        <BaremeSubItem title=\"Ecart de 2\" setBaremeValue={setBaremeValue} path={['score', 'ecart2']} bareme={bareme} />\n        <BaremeSubItem title=\"Ecart de 3 ou +\" setBaremeValue={setBaremeValue} path={['score', 'faux']} bareme={bareme} />\n      </div>\n      <div>\n        <h4>Différence de buts</h4>\n        <BaremeSubItem title=\"Pronostic Exact\" setBaremeValue={setBaremeValue} path={['diff', 'exact']} bareme={bareme} />\n        <BaremeSubItem title=\"Ecart de 1\" setBaremeValue={setBaremeValue} path={['diff', 'ecart1']} bareme={bareme} />\n        <BaremeSubItem title=\"Ecart de 2 ou +\" setBaremeValue={setBaremeValue} path={['diff', 'faux']} bareme={bareme} />\n      </div>\n    </div>\n  </div>\n);\n\nBaremeSettings.propTypes = {\n  bareme: PropTypes.object.isRequired,\n  setBaremeValue: PropTypes.func.isRequired,\n};\n\nexport default BaremeSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/CustomToolTip.css';\n\n// in  Object { Jacques: 39, Nicolas: 38, 'Stéphane': 39, 'Valérie': 31 }\n// out Object { Jacques: 1, 'Stéphane': 1, Nicolas: 3, 'Valérie': 4 }\nconst computeRankings = (totals) => {\n  let currentPlace = 0;\n  let skippedPlaces = 0;\n  let scoreOfThePreviousPlayer = Number.MAX_SAFE_INTEGER;\n  return Object.entries(totals)\n    .sort(([_a, avalue], [_b, bvalue]) => avalue < bvalue)\n    .reduce((ps, [key, value]) => {\n      if (value !== scoreOfThePreviousPlayer) {\n        currentPlace += 1 + skippedPlaces;\n        skippedPlaces = 0;\n      } else {\n        skippedPlaces += 1;\n      }\n      scoreOfThePreviousPlayer = value;\n      ps[key] = currentPlace;\n      return ps;\n    }, {});\n};\n\nconst CustomToolTip = (props) => {\n  const { active } = props;\n\n  if (active) {\n    const { payload } = props;\n    //console.log(payload)\n    let currentPlace = 0;\n    let skippedPlaces = 0;\n    let scoreOfThePreviousPlayer = Number.MAX_SAFE_INTEGER;\n    let previousRankings;\n    if (payload[0].payload.additionalData) {\n      previousRankings = computeRankings(payload[0].payload.additionalData.previousTotals);\n    }\n\n    return payload[0].payload.additionalData ? (\n      <div className=\"custom-tooltip\">\n        <div>{payload[0].payload.additionalData.fullName}</div>\n        <table>\n          <tbody>\n            {payload.sort((a, b) => a.value < b.value).map((pl) => {\n              if (pl.value !== scoreOfThePreviousPlayer) {\n                currentPlace += 1 + skippedPlaces;\n                skippedPlaces = 0;\n              } else {\n                skippedPlaces += 1;\n              }\n              scoreOfThePreviousPlayer = pl.value;\n\n              let previousRank = previousRankings[pl.name];\n              let rankEvolution;\n              if (previousRank === currentPlace) {\n                rankEvolution = '=';\n              } else if (previousRank > currentPlace) {\n                rankEvolution = `↗️${previousRank - currentPlace}`;\n              } else {\n                rankEvolution = `↘️${currentPlace - previousRank}`;\n              }\n\n              let pointsEvolution = pl.payload.additionalData.pronosResults[pl.name].outcome;\n\n              return (\n                <tr className=\"tooltip-row\" style={{ color: pl.color }} key={pl.name}>\n                  <td>{currentPlace}</td>\n                  <td className=\"tooltip-rank-evolution-cell\">({rankEvolution})</td>\n                  <td>{pl.name}</td>\n                  <td className=\"tooltip-points-cell\">{pl.value} pts</td>\n                  <td>({pointsEvolution < 0 ? pointsEvolution : `+${pointsEvolution}`})</td>\n                  <td>{pl.payload.additionalData.rawPronos[pl.name]}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    ) : null;\n  }\n\n  return null;\n};\n\nCustomToolTip.propTypes = {\n  active: PropTypes.bool,\n  payload: PropTypes.array,\n};\n\nexport default CustomToolTip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nimport CustomToolTip from './CustomToolTip';\n\nimport players from '../data/players.json';\n\nimport '../css/SimpleLineChart.css';\n\nconst SimpleLineChart = ({ chartData }) => (\n  <div className=\"simple-line-chart\">\n    <LineChart width={1000} height={500} data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n      <XAxis dataKey=\"name\" />\n      <YAxis type=\"number\" domain={[0, 'dataMax']} />\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <Tooltip content={<CustomToolTip />} />\n      <Legend />\n      {Object.values(players).map((p) => (\n        <Line key={p.name} type=\"monotone\" dataKey={p.name} stroke={p.color} />\n      ))}\n    </LineChart>\n  </div>\n);\n\nSimpleLineChart.propTypes = {\n  chartData: PropTypes.array.isRequired,\n};\n\nexport default SimpleLineChart;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonToolbar, ToggleButtonGroup, ToggleButton } from 'react-bootstrap';\n\nimport filters from '../data/filters.json';\nimport regions from '../data/regions.json';\nimport teams from '../data/teams.json';\n\nimport '../css/ChartSettings.css';\n\nconst getDisplayName = (filter) => (filter.type === 'Groupe' ? `Grp.${filter.name}` : filter.type);\n\nconst getTeamsFromRegion = (reg) =>\n  Object.entries(teams)\n    .filter(([_, { region }]) => region === regions.indexOf(reg))\n    .map(([k]) => k)\n    .sort()\n    .join('<br/>');\n\nconst getTeamsFromGroup = (grp) =>\n  Object.entries(teams)\n    .filter(([_, { group }]) => group === grp)\n    .map(([k]) => k)\n    .sort()\n    .join('<br/>');\n\nconst getTeamsFromDirtyGroup = (dgrp) => (dgrp.startsWith('Grp') ? getTeamsFromGroup(dgrp.slice(-1)) : '');\n\nclass ChartSettings extends Component {\n  state = {\n    checkedPhases: filters.map((filter) => getDisplayName(filter)),\n    checkedRegions: regions,\n  };\n\n  togglePhase = (newPhases) => {\n    this.setState({ checkedPhases: newPhases });\n    this.props.setPhases(newPhases);\n  };\n\n  toggleRegion = (newRegions) => {\n    this.setState({ checkedRegions: newRegions });\n    this.props.setRegions(newRegions);\n  };\n\n  changeFilterType = (newFilterType) => {\n    this.props.setFilterType(newFilterType);\n  };\n\n  render() {\n    const { filterType } = this.props;\n    const { checkedPhases, checkedRegions } = this.state;\n    return (\n      <table className=\"char-settings\">\n        <tbody>\n          <tr>\n            <td>\n              <div className=\"buttons-phases-regions\">\n                <ButtonToolbar>\n                  <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={'Phases'} onChange={this.changeFilterType}>\n                    {['Phases', 'Regions'].map((ft) => (\n                      <ToggleButton key={ft} value={ft}>\n                        {ft}\n                      </ToggleButton>\n                    ))}\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <div className=\"buttons-phases\" style={{ display: filterType === 'Phases' ? 'flex' : 'none' }}>\n                <ToggleButtonGroup type=\"checkbox\" value={checkedPhases} onChange={this.togglePhase}>\n                  {filters.map((filter) => {\n                    let displayName = getDisplayName(filter);\n                    return (\n                      <ToggleButton key={displayName} value={displayName} data-tip={getTeamsFromDirtyGroup(displayName)} data-multiline=\"true\">\n                        {displayName}\n                      </ToggleButton>\n                    );\n                  })}\n                </ToggleButtonGroup>\n              </div>\n              <div className=\"buttons-regions\" style={{ display: filterType === 'Regions' ? 'flex' : 'none' }}>\n                <ToggleButtonGroup type=\"checkbox\" value={checkedRegions} onChange={this.toggleRegion}>\n                  {regions.map((region) => (\n                    <ToggleButton key={region} value={region} data-tip={getTeamsFromRegion(region)} data-multiline=\"true\">\n                      {region}\n                    </ToggleButton>\n                  ))}\n                </ToggleButtonGroup>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nChartSettings.propTypes = {\n  filterType: PropTypes.string.isRequired,\n  setFilterType: PropTypes.func.isRequired,\n  setPhases: PropTypes.func.isRequired,\n  setRegions: PropTypes.func.isRequired,\n};\n\nexport default ChartSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Cell } from 'recharts';\n\nimport players from '../data/players.json';\n\nimport '../css/RankingBarChart.css';\n\n// j \"#ff3419\" n \"#0000e5\" s \"#00ff00\" v \"#ff00ff\"\nconst RankingBarChart = ({ chartDataLast }) => {\n  let chartData = Object.values(players).reduce((data, p) => {\n    data.push({ name: p.name, result: chartDataLast[p.name] });\n    return data;\n  }, []);\n  //console.log(chartData);\n  return (\n    <div className=\"ranking-barchart\">\n      <BarChart width={600} height={300} data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <XAxis dataKey=\"name\" axisLine={false} tickLine={false} />\n        <YAxis domain={[0, (dataMax) => Math.floor(dataMax * 1.1)]} hide={true} />\n        <Tooltip />\n        <Bar dataKey=\"result\" label={{ position: 'top' }}>\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={players[index + 1].color} />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n};\n\nRankingBarChart.propTypes = {\n  chartDataLast: PropTypes.object.isRequired,\n};\n\nexport default RankingBarChart;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\n\nimport players from '../data/players.json';\n\nimport '../css/ResultsByTeamTable.css';\n\n// resultsByTeam: {Jacques:{ALL:{average:0.8333333333333334, matchCount:3, score:2.5},...\nconst ResultsByTeamTable = ({ resultsByTeam }) => {\n  // array of {nb of players} arrays of {nb of matches} arrays like this one: [\"FRA\", 1.5]\n  let resultsByTeam2 = Object.values(resultsByTeam)\n    .map((resultsByTeamsUnsorted) =>\n      Object.entries(resultsByTeamsUnsorted).sort(([_a, da], [_b, db]) => {\n        if (da.average < db.average) {\n          return 1;\n        }\n        if (db.average < da.average) {\n          return -1;\n        }\n        return 0;\n      }),\n    )\n    .map((resultsByTeamsSorted) => Object.values(resultsByTeamsSorted).map(([team, { average }]) => [team, average]));\n  let topResultsByTeams = [];\n  for (let i = 0; i < resultsByTeam2.length; i++) {\n    // showing the top 5 is enough\n    for (let j = 0; j < 5 /*dd[i].length*/; j++) {\n      if (i === 0) {\n        topResultsByTeams[j] = [];\n      }\n      topResultsByTeams[j][i] = resultsByTeam2[i][j];\n    }\n  }\n  //console.log(resultsByTeam2);\n  //console.log(topResultsByTeams);\n  return (\n    <div className=\"results-by-team-table\">\n      <h3>Equipes rapportant le plus de points par match</h3>\n      <Table striped bordered condensed hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            {Object.values(players).map((p) => (\n              <th key={p.name} colSpan={2}>\n                {p.name}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {topResultsByTeams.map((topResultsByRank, i) => (\n            <tr key={i}>\n              <td>{i + 1}</td>\n              {topResultsByRank.map((topResultsByRankByPlayer, j) => (\n                <Fragment key={j}>\n                  <td>{topResultsByRankByPlayer[0]}</td>\n                  <td>{topResultsByRankByPlayer[1].toFixed(2)}</td>\n                </Fragment>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nResultsByTeamTable.propTypes = {\n  resultsByTeam: PropTypes.object.isRequired,\n};\n\nexport default ResultsByTeamTable;\n","import React from 'react';\n\nimport players from '../data/players.json';\n\n/**\n * Build pronos results for all matches + previous totals to show evolution in tooltip\n * @param {Object} matches eg [...,\n * {\"id\":2,\n *  \"teams\":{\"A\":\"EGY\",\"B\":\"URU\"},\n *  \"stage\":{\"type\":\"Groupe\"},\n *  \"result\":{\"A\":0,\"B\":1},\n *  \"players\":{\"1\":{\"A\":1,\"B\":2},\"2\":{\"A\":0,\"B\":2},\"3\":{\"A\":0,\"B\":3},\"4\":{\"A\":0,\"B\":3}}},...]\n * @param {Object} bareme eg {\"vainqueur\":{\"exact\":1,\"faux\":0},\"score\":{\"exact\":1,\"ecart1\":0,\"ecart2\":0,\"faux\":0},\"diff\":{\"exact\":1,\"ecart1\":0,\"faux\":0}}\n * @returns {Object} eg\n * {...,\n *  10: {name:\"RUS-ARA\",\n *       Jacques:53,\n *       Nicolas:51,\n *       additionalData:{\n *           shortName:\"RUS-ARA\",\n *           fullName:<React component with score for Tooltip>,\n *           rawPronos:{Jacques:<React component with prono for Tooltip>, Nicolas:...},\n *           pronosResults: {Jacques:1, Nicolas:0},\n *           previousTotals:{Jacques:52, Nicolas:51}\n * only last:resultsByTeam: {Jacques:{ALL:{average:0.8333333333333334, matchCount:3, score:2.5},...},...}\n *  },...\n * }\n */\nconst buildAggregatedResultFromMatches = (matches, bareme) => {\n  // {...,\n  //  10: {shortName:\"RUS-ARA\",\n  //       fullName:<React component with score for Tooltip>,\n  //       rawPronos:{Jacques:<React component with prono for Tooltip>, Nicolas:...},\n  //       pronosResults: {Jacques:{outcome:3, teams:{RUS:1, ARA:2}}, Nicolas:{outcome:1, teams:{RUS:0, ARA:1}}},\n  //  },...\n  // }\n  let results = buildPronosResultsFromMatches(matches, bareme);\n  // temp variable to store the result after the previous match so that we can compute the new total\n  // {Jacques:0, Nicolas:0}\n  let previousTotals = Object.assign(...Object.values(players).map(({ name }) => ({ [name]: 0 })));\n  let resultsByTeam = Object.assign(...Object.values(players).map(({ name }) => ({ [name]: {} })));\n  let dataForGraph = Object.entries(results).reduce(\n    (matchesForGraph, [_, match], i) => {\n      let matchForGraph = Object.values(players).reduce(\n        (totals, { name }) => {\n          totals[name] = match.pronosResults[name].outcome + (i > 0 ? previousTotals[name] : 0);\n          // store the pronos results on totals so that the tooltip can use it\n          totals.additionalData = match;\n          if (!totals.additionalData.previousTotals) {\n            totals.additionalData.previousTotals = {};\n            Object.assign(totals.additionalData.previousTotals, previousTotals);\n          }\n          // update previousTotals\n          previousTotals[name] = totals[name];\n          Object.entries(match.pronosResults[name].teams).forEach(([team, score]) => {\n            if (resultsByTeam[name][team]) {\n              resultsByTeam[name][team].score += score;\n              resultsByTeam[name][team].matchCount += 1;\n            } else {\n              resultsByTeam[name][team] = { score: score, matchCount: 1 };\n            }\n          });\n          return totals;\n        },\n        { name: match.shortName },\n      );\n      matchesForGraph.push(matchForGraph);\n      return matchesForGraph;\n    },\n    // {name:'FRA-CRO',Jacques:0,Nicolas:0}\n    [\n      Object.values(players).reduce(\n        (ps, { name }) => {\n          ps[name] = 0;\n          return ps;\n        },\n        { name: 'DEBUT' },\n      ),\n    ],\n  );\n  Object.values(resultsByTeam).forEach((resultsByTeamForOnePlayer) =>\n    Object.values(resultsByTeamForOnePlayer).forEach((v) => (v.average = v.score / v.matchCount)),\n  );\n  let rankings = { dataForGraph: dataForGraph, resultsByTeam: resultsByTeam };\n  //console.log(rankings);\n  return rankings;\n};\n\n/**\n * Build pronos results for all matches\n * @param {Object} matches eg [...,\n * {\"id\":2,\n *  \"teams\":{\"A\":\"EGY\",\"B\":\"URU\"},\n *  \"stage\":{\"type\":\"Groupe\"},\n *  \"result\":{\"A\":0,\"B\":1},\n *  \"players\":{\"1\":{\"A\":1,\"B\":2},\"2\":{\"A\":0,\"B\":2},\"3\":{\"A\":0,\"B\":3},\"4\":{\"A\":0,\"B\":3}}},...]\n * @param {Object} bareme eg {\"vainqueur\":{\"exact\":1,\"faux\":0},\"score\":{\"exact\":1,\"ecart1\":0,\"ecart2\":0,\"faux\":0},\"diff\":{\"exact\":1,\"ecart1\":0,\"faux\":0}}\n * @returns {Object} eg {...,\n *  10: {shortName:\"RUS-ARA\",\n *       fullName:<React component with score for Tooltip>,\n *       rawPronos:{Jacques:<React component with prono for Tooltip>, Nicolas:...},\n *       pronosResults: {Jacques:{outcome:3, teams:{RUS:1, ARA:2}}, Nicolas:{outcome:1, teams:{RUS:0, ARA:1}}},\n *  },...\n * }\n */\nconst buildPronosResultsFromMatches = (matches, bareme) => {\n  return matches.reduce((pronosResults, match) => {\n    pronosResults[match.id] = {\n      shortName: `${match.teams.A}-${match.teams.B}`,\n      fullName: (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <div style={{ marginRight: 5 }}>{match.teams.A}</div>\n          {underline(match.result)}\n          <div style={{ marginLeft: 5 }}>{match.teams.B}</div>\n        </div>\n      ),\n      rawPronos: Object.entries(match.players).reduce((ps, [playerId, prono]) => {\n        ps[players[playerId].name] = underline(prono);\n        return ps;\n      }, {}),\n      pronosResults: buildPronosResultsFromMatch(match, bareme),\n    };\n    return pronosResults;\n  }, {});\n};\n\n/**\n * Builds an object containing for each player the points earned on this match\n * @param {Object} match eg {\"id\":1,\"teams\":{\"A\":\"RUS\",\"B\":\"ARA\"},\"stage\":{\"type\":\"Groupe\"},\"result\":{\"A\":5,\"B\":0},\"players\":{\"1\":{\"A\":4,\"B\":1},\"2\":{\"A\":2,\"B\":1},\"3\":{\"A\":1,\"B\":2},\"4\":{\"A\":2,\"B\":0}}}\n * @param {Object} bareme eg {\"vainqueur\":{\"exact\":1,\"faux\":0},\"score\":{\"exact\":1,\"ecart1\":0,\"ecart2\":0,\"faux\":0},\"diff\":{\"exact\":1,\"ecart1\":0,\"faux\":0}}\n * @returns {Object} eg {Jacques:{outcome:3, teams:{RUS:1, ARA:2}}, Nicolas:{outcome:1, teams:{RUS:0, ARA:1}}}\n */\nconst buildPronosResultsFromMatch = (match, bareme) => {\n  return Object.entries(match.players).reduce((pronosResults, [playerId, prono]) => {\n    pronosResults[players[playerId].name] = outcome(prono, match.result, bareme, match.teams);\n    return pronosResults;\n  }, {});\n};\n\n/**\n * Compute the points earned on one match + detail per team\n * @param {Object} prono eg {A:4, B:0}\n * @param {Object} matchResult eg {A:5, B:0}\n * @param {Object} bareme eg {\"vainqueur\":{\"exact\":1,\"faux\":0},\"score\":{\"exact\":1,\"ecart1\":0,\"ecart2\":0,\"faux\":0},\"diff\":{\"exact\":1,\"ecart1\":0,\"faux\":0}}\n * @param {Object} teams eg {\"A\":\"RUS\",\"B\":\"ARA\"}\n * @returns {Object} eg {outcome:3, teams:{RUS:1, ARA:2}}\n */\nconst outcome = (prono, matchResult, bareme, teams) => {\n  // no prediction => worst possible score\n  if (prono.A < 0 || prono.B < 0) {\n    let outcome = Math.min(...Object.values(bareme.vainqueur)) + Math.min(...Object.values(bareme.score)) + Math.min(...Object.values(bareme.diff));\n    return {\n      outcome: outcome,\n      teams: { [teams.A]: outcome / 2, [teams.B]: outcome / 2 },\n    };\n  }\n\n  let pronoDiff = prono.A - prono.B;\n  let resultDiff = matchResult.A - matchResult.B;\n  let pronoWinner = prono.winner || (pronoDiff > 0 ? 'A' : pronoDiff < 0 ? 'B' : '');\n  let resultWinner = matchResult.winner || (resultDiff > 0 ? 'A' : resultDiff < 0 ? 'B' : '');\n\n  let resultPronoWinner = 0;\n  let resultPronoDiff = 0;\n  let resultPronoScore = 0;\n  let resultPronoA = 0;\n  let resultPronoB = 0;\n\n  if (pronoWinner === resultWinner) {\n    resultPronoWinner += bareme.vainqueur.exact;\n    if (pronoWinner === 'A') {\n      resultPronoA += bareme.vainqueur.exact;\n    } else if (pronoWinner === 'B') {\n      resultPronoB += bareme.vainqueur.exact;\n    } else {\n      resultPronoA += bareme.vainqueur.exact / 2;\n      resultPronoB += bareme.vainqueur.exact / 2;\n    }\n  } else {\n    resultPronoWinner += bareme.vainqueur.faux;\n    if (pronoWinner === 'A') {\n      resultPronoA += bareme.vainqueur.faux;\n    } else if (pronoWinner === 'B') {\n      resultPronoB += bareme.vainqueur.faux;\n    } else {\n      resultPronoA += bareme.vainqueur.faux / 2;\n      resultPronoB += bareme.vainqueur.faux / 2;\n    }\n  }\n\n  if (pronoDiff === resultDiff) {\n    resultPronoDiff += bareme.diff.exact;\n    resultPronoA += bareme.diff.exact / 2;\n    resultPronoB += bareme.diff.exact / 2;\n  } else if (Math.abs(pronoDiff - resultDiff) === 1) {\n    resultPronoDiff += bareme.diff.ecart1;\n    resultPronoA += bareme.diff.ecart1 / 2;\n    resultPronoB += bareme.diff.ecart1 / 2;\n  } else if (Math.abs(pronoDiff - resultDiff) > 2) {\n    resultPronoDiff += bareme.diff.faux;\n    resultPronoA += bareme.diff.faux / 2;\n    resultPronoB += bareme.diff.faux / 2;\n  }\n\n  if (prono.A === matchResult.A) {\n    resultPronoScore += bareme.score.exact;\n    resultPronoA += bareme.score.exact;\n  } else if (Math.abs(prono.A - matchResult.A) === 1) {\n    resultPronoScore += bareme.score.ecart1;\n    resultPronoA += bareme.score.ecart1;\n  } else if (Math.abs(prono.A - matchResult.A) === 2) {\n    resultPronoScore += bareme.score.ecart2;\n    resultPronoA += bareme.score.ecart2;\n  } else if (Math.abs(prono.A - matchResult.A) > 2) {\n    resultPronoScore += bareme.score.faux;\n    resultPronoA += bareme.score.faux;\n  }\n\n  if (prono.B === matchResult.B) {\n    resultPronoScore += bareme.score.exact;\n    resultPronoB += bareme.score.exact;\n  } else if (Math.abs(prono.B - matchResult.B) === 1) {\n    resultPronoScore += bareme.score.ecart1;\n    resultPronoB += bareme.score.ecart1;\n  } else if (Math.abs(prono.B - matchResult.B) === 2) {\n    resultPronoScore += bareme.score.ecart2;\n    resultPronoB += bareme.score.ecart2;\n  } else if (Math.abs(prono.B - matchResult.B) > 2) {\n    resultPronoScore += bareme.score.faux;\n    resultPronoB += bareme.score.faux;\n  }\n\n  // {outcome:3, teams:{RUS:1, ARA:2}}\n  return {\n    outcome: resultPronoWinner + resultPronoDiff + resultPronoScore,\n    teams: { [teams.A]: resultPronoA, [teams.B]: resultPronoB },\n  };\n};\n\n/**\n * Builds a React component for the score of a match.\n * In case of a draw + penalty shootout, the score of the winner is underlined\n * @param {Object} matchResult eg {\"A\":5,\"B\":0}\n * @returns a React component for the score of a match\n */\nconst underline = (matchResult) => {\n  if (matchResult.winner) {\n    if (matchResult.winner === 'A') {\n      return (\n        <div style={{ display: 'flex' }}>\n          <div className=\"underline\">{matchResult.A}</div>\n          <div>-{matchResult.B}</div>\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: 'flex' }}>\n        <div>{matchResult.A}-</div>\n        <div className=\"underline\">{matchResult.B}</div>\n      </div>\n    );\n  } else {\n    return <div style={{ display: 'flex' }}>{`${matchResult.A}-${matchResult.B}`}</div>;\n  }\n};\n\nexport default buildAggregatedResultFromMatches;\n","import React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { Navbar } from 'react-bootstrap';\n\nimport BaremeSettings, { defaultBareme } from './BaremeSettings';\nimport SimpleLineChart from './SimpleLineChart';\nimport ChartSettings from './ChartSettings';\nimport RankingBarChart from './RankingBarChart';\nimport ResultsByTeamTable from './ResultsByTeamTable';\n\nimport buildAggregatedResultFromMatches from '../js/ranking';\n\nimport '../css/App.css';\n\nimport matches from '../data/matches.json';\nimport teams from '../data/teams.json';\nimport regions from '../data/regions.json';\n\nconst getPhase = (match) => (match.stage.type === 'Groupe' ? `Grp.${teams[match.teams.A].group}` : match.stage.type);\n\nclass App extends Component {\n  state = {\n    filterType: 'Phases',\n    bareme: defaultBareme,\n    rankings: buildAggregatedResultFromMatches(matches, defaultBareme),\n  };\n\n  dataPhases = matches;\n  dataRegions = matches;\n  rankingsPhases = this.state.rankings;\n  rankingsRegions = this.state.rankings;\n\n  setPhases = (newPhases) => {\n    this.dataPhases = matches.filter((match) => newPhases.includes(getPhase(match)));\n    this.rankingsPhases = buildAggregatedResultFromMatches(this.dataPhases, this.state.bareme);\n    this.setState({ rankings: this.rankingsPhases });\n  };\n\n  setRegions = (newRegions) => {\n    this.dataRegions = matches.filter(\n      (match) => newRegions.includes(regions[teams[match.teams.A].region]) && newRegions.includes(regions[teams[match.teams.B].region]),\n    );\n    this.rankingsRegions = buildAggregatedResultFromMatches(this.dataRegions, this.state.bareme);\n    this.setState({ rankings: this.rankingsRegions });\n  };\n\n  setFilterType = (newFilterType) => {\n    this.setState({\n      filterType: newFilterType,\n      rankings: newFilterType === 'Phases' ? this.rankingsPhases : this.rankingsRegions,\n    });\n  };\n\n  setBaremeValue = (a, b, isAdd) => {\n    let newBareme = {};\n    Object.assign(newBareme, this.state.bareme);\n    newBareme[a][b] += isAdd ? 1 : -1;\n    this.setState({\n      bareme: newBareme,\n      rankings: buildAggregatedResultFromMatches(this.state.filterType === 'Phases' ? this.dataPhases : this.dataRegions, newBareme),\n    });\n  };\n\n  render() {\n    const { filterType, bareme, rankings } = this.state;\n    return (\n      <div className=\"App\">\n        <Navbar inverse fixedTop>\n          <Navbar.Header style={{ marginLeft: 80 }}>\n            <Navbar.Brand>Résultats des pronostics de la Coupe du Monde 2018</Navbar.Brand>\n          </Navbar.Header>\n        </Navbar>\n        <BaremeSettings bareme={bareme} setBaremeValue={this.setBaremeValue} />\n        <RankingBarChart chartDataLast={rankings.dataForGraph[rankings.dataForGraph.length - 1]} />\n        <ResultsByTeamTable resultsByTeam={rankings.resultsByTeam} />\n        <ChartSettings filterType={filterType} setFilterType={this.setFilterType} setPhases={this.setPhases} setRegions={this.setRegions} />\n        <SimpleLineChart chartData={rankings.dataForGraph} />\n        <ReactTooltip />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}